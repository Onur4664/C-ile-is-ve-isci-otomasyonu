<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="yenitipi.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        vgyvw/wAioADKv/Z
</value>
  </data>
</root>